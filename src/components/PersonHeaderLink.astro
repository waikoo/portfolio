---
import "@fontsource/jost/400.css";
const { href, isCurrentPage, isHamburger } = Astro.props;

const getTextColor = (
  href: string,
  isCurrentPage: boolean,
  isHamburger: boolean,
) => {
  if (href === "/") {
    const url = Astro.request.url.toString();
    if (isHamburger) {
      return url.includes("barna") ? "text-black" : "";
    }
    return url.includes("barna") ? "text-white" : "text-[#e296f5]";
  }
  if (isHamburger) {
    return isCurrentPage ? "text-white" : "text-black";
  }
  if (href.includes("evelin")) {
    return isCurrentPage ? "text-[#efd6f5]" : "text-[#e296f5]";
  }
  if (href.includes("barna")) {
    return isCurrentPage ? "text-[#D9D62D]" : "text-white";
  }
};
const circleColor = isHamburger
  ? "bg-white"
  : href.includes("evelin")
    ? "bg-[#efd6f5]"
    : "bg-[#D9D62D]";

const circlePosition = isHamburger
  ? "left-[-15px] sm:left-[-12px] translate-y-[15px] sm:translate-y-[16px]"
  : "inset-0 m-auto mt-[1.55rem]";
---

<li>
  <a
    class={`${getTextColor(href, isCurrentPage, isHamburger)} ${isHamburger ? 'text-[26px]' : 'sm:text-[32px]'} lg:text-[17px] flex flex-col relative`}
    href={`${href}`}
  >
    <slot />
    {
      isCurrentPage ? (
        <div
          transition:name="circle"
          class={`absolute h-[8px] w-[8px] block rounded-full ${circlePosition} ${circleColor}`}
        />
      ) : null
    }
  </a>
</li>

<style>
  li {
    font-family: "Jost", sans-serif;
    font-weight: 400;
  }
</style>
