---
import IconPlusMinus from "./IconPlusMinus.astro";

const { bgColor, slotId, iconId, buttonId, className } = Astro.props;
---

<script is:inline define:vars={{ slotId, iconId, buttonId }}>
  function setupExpandCollapse() {
    const button = document.querySelector(`#${buttonId}`);
    const slot = document.querySelector(`#${slotId}`);
    const icon = button.querySelector(`#${iconId}`);
    const span = button.querySelector(`.span`);

    button?.addEventListener("click", () => {
      slot?.classList.toggle("hidden");
      icon?.classList.toggle("active");
      span.textContent = span.textContent === "Expand" ? "Collapse" : "Expand";
    });
  }
  setupExpandCollapse();
  document.addEventListener("DOMContentLoaded", setupExpandCollapse);
  document.addEventListener("astro:after-swap", setupExpandCollapse);
</script>

<section class={`flex flex-col ${className} isolate`}>
  <button
    class="inline-flex sm:flex justify-center gap-[4px] items-center w-min-content rounded-[5px] pr-3 z-2 mx-auto relative cursor-pointer"
    id={buttonId}
    style={{ backgroundColor: bgColor }}
  >
    <div
      class="absolute top-1/2 h-[2px] z-1 w-screen"
      style={{ backgroundColor: bgColor }}
    >
    </div>

    <p
      class="w-fit-content py-1 pl-3 pr-1 font-medium text-[#1e1e1e] relative z-2"
    >
      <span class="span">Expand</span> Details
    </p>
    <IconPlusMinus id={iconId} className="z-2" />
  </button>

  <div id={slotId} class="slot hidden px-[10px] sm:mt-[65px]">
    <slot />
  </div>
</section>
