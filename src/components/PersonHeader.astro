---
import PersonLinks from "./PersonLinks.astro";
import IconHamburger from "./IconHamburger.astro";
import LogoEvelin from "./LogoEvelin.astro";
import LogoBarna from "./LogoBarna.astro";
import LogoEvelinDark from "./LogoEvelinDark.astro";

const { fullName, color, bgColor } = Astro.props;

const [familyName, name] = fullName.split(" ");

const lowercasedName = name.toLowerCase();
const pathname = Astro.url.pathname;
const isQuizzical = pathname.includes("quizzical");
const isThriftStudio = pathname.includes("thriftstudio");
---

<script is:inline define:vars={{ isQuizzical, isThriftStudio }}>
  function updateHeaderOnScroll() {
    const header = document.querySelector("header");
    if (!header) return;

    const isScrolled = window.scrollY > 0;

    header.style.backgroundColor = isScrolled
      ? header.dataset.bgColor || ""
      : "";
    if (!isThriftStudio) {
      header.classList.toggle("z-50", isScrolled);
    }

    if (isQuizzical) {
      updateQuizzicalStyles(isScrolled);
    }
  }

  function updateQuizzicalStyles(isScrolled) {
    const header = document.querySelector("header");
    const hamburgerIcon = header?.querySelector(".hamburger-icon");
    const quizzicalHeaderTexts = header?.querySelectorAll(".quizzicalFont");
    if (!hamburgerIcon || !quizzicalHeaderTexts) return;

    const strokeColor = isScrolled ? "#000" : "#e1ca02";
    const textColor = isScrolled ? "#000" : "#EBD302";

    Array.from(hamburgerIcon.children).forEach((stroke) => {
      stroke.style.stroke = strokeColor;
    });

    quizzicalHeaderTexts.forEach((text) => {
      if (text) {
        text.style.color = textColor;
      }
    });

    if (isScrolled) {
      hamburgerIcon.style.color = "#000";
    }
  }

  window.addEventListener("scroll", updateHeaderOnScroll);

  const attachHamburgerEventListener = () => {
    const hamburgerIcon = document.querySelector(".hamburger-icon");
    const hamburgerMenu = document.querySelector(".hamburger-menu");
    const hamburgerMenuInner = document.querySelector(".hamburger-inner");

    if (hamburgerIcon) {
      hamburgerIcon.addEventListener("click", () => {
        hamburgerMenu?.classList.remove("hidden");
        hamburgerMenuInner.classList.add("motion-safe:animate-fade-left");
        setTimeout(() => {
          hamburgerMenuInner?.classList.remove("motion-safe:animate-fade-left");
        }, 1000);
      });
    }
  };
  document.addEventListener("DOMContentLoaded", attachHamburgerEventListener);
</script>

<header class={`sticky top-0 z-[10]`} data-bg-color={bgColor}>
  <div
    class={`mx-auto w-[80%] sm:w-[90%] flex content-center flex-row justify-between items-center py-6 `}
  >
    <a href=`/${lowercasedName}/projects`>
      {
        isThriftStudio ? (
          <LogoEvelinDark />
        ) : isQuizzical || lowercasedName === "evelin" ? (
          <LogoEvelin />
        ) : (
          <LogoBarna />
        )
      }
    </a>

    <PersonLinks
      lowercasedName={lowercasedName}
      className="hidden lg:flex xl:flex-row gap-[20px]"
      color={color}
    />

    <IconHamburger
      name={lowercasedName}
      className="lg:hidden h-full flex flex-col justify-center hamburger-icon z-[150] relative cursor-pointer"
      color={color}
    />
  </div>
</header>
