---
import "@fontsource/jost/600.css";
import BarnaMenuLinks from "./BarnaMenuLinks.astro";
import BarnaMenuTags from "./BarnaMenuTags.astro";
import PersonProjectCardDescription from "./PersonProjectCardDescription.astro";
import PersonProjectCardTitle from "./PersonProjectCardTitle.astro";
import PersonProjectCardMedia from "./PersonProjectCardMedia.astro";
const { id, name, description, src, tags, live, github, color } = Astro.props;

const projectWrapper =
  id === 2 ? "mx-auto grid-cols-[35%_65%] " : "grid-cols-[65%_35%]";
const mediaWrapper =
  id === 2 || id === 4
    ? "col-start-2 col-end-3 row-start-1 row-end-2"
    : "col-start-1 col-end-2";
const textWrapper =
  id === 2 || id === 4
    ? "col-start-1 col-end-2 row-start-1 row-end-2"
    : "col-start-2 col-end-3";
---

<script>
  import { addClass } from "../utils/addClass";

  const observer = new IntersectionObserver((elements) => addClass(elements));

  const projects = document.querySelectorAll(".project");
  projects.forEach((project) => {
    observer.observe(project);
  });
</script>

<section
  class={`relative grid mt-20 project gap-[8px] grid-rows-[auto] items-center justify-items-center ${projectWrapper}`}
>
  <div class={`aspect-video grid ${mediaWrapper}`}>
    <PersonProjectCardMedia src={src} description={description} />
  </div>

  <div
    class={`text-right flex flex-col gap-[28px] backdrop-blur-lg rounded-[30px] bg-black/5 grid-rows-[auto_auto_auto_auto_auto] ${textWrapper} p-[30px]`}
    style={{ color: color }}
  >
    <PersonProjectCardTitle color={color}
      >{name.toUpperCase()}</PersonProjectCardTitle
    >
    <PersonProjectCardDescription description={description} github={github} />
    <BarnaMenuTags tags={tags} color={color} />
    <BarnaMenuLinks live={live} github={github} color={color} id={id} />
  </div>
</section>

<style>
  .jost-semibold {
    font-family: "Jost", sans-serif;
    font-weight: 600;
  }

  .project {
    --ease-out-quad: cubic-bezier(0.25, 0.46, 0.45, 0.94);
    opacity: 0;
    transform: translateX(-200px);
    transition:
      opacity 0.5s var(--ease-out-quad),
      transform 0.5s var(--ease-out-quad);
  }

  .project.in-view {
    opacity: 1;
    transform: translateX(0);
  }

  @keyframes fade-in {
    from {
      opacity: 0;
      transform: translateX(-100px);
    }
    to {
      opacity: 1;
      transform: translateX(0px);
    }
  }
</style>
